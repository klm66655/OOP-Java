1.

interface NationalService {
    int getDaysLeft();
    void work();
}

class CivilService implements NationalService {
    private int daysLeft;

    public CivilService() {
        this.daysLeft = 362;
    }

    public int getDaysLeft() {
        return this.daysLeft;
    }

    public void work() {
        if (this.daysLeft > 0) {
            this.daysLeft--;
        }
    }
}

class MilitaryService implements NationalService {
    private int daysLeft;

    public MilitaryService(int daysLeft) {
        this.daysLeft = daysLeft;
    }

    public int getDaysLeft() {
        return this.daysLeft;
    }

    public void work() {
        if (this.daysLeft > 0) {
            this.daysLeft--;
        }
    }
}

public class Main {
    public static void main(String[] args) {
        CivilService civil = new CivilService();
        MilitaryService military = new MilitaryService(400);

        System.out.println("Civil days left: " + civil.getDaysLeft());
        System.out.println("Military days left: " + military.getDaysLeft());

        civil.work();
        military.work();

        System.out.println("Civil days left: " + civil.getDaysLeft());
        System.out.println("Military days left: " + military.getDaysLeft());
    }
}


2.
public interface ToBeStored {
    double weight();
}

public class Book implements ToBeStored {
    private String writer;
    private String name;
    private double weight;

    public Book(String writer, String name, double weight) {
        this.writer = writer;
        this.name = name;
        this.weight = weight;
    }

    public double weight() {
        return this.weight;
    }

    @Override
    public String toString() {
        return this.writer + ": " + this.name;
    }
}

public class CD implements ToBeStored {
    private String artist;
    private String title;
    private int year;
    private double weight = 0.1;

    public CD(String artist, String title, int year) {
        this.artist = artist;
        this.title = title;
        this.year = year;
    }

    public double weight() {
        return this.weight;
    }

    @Override
    public String toString() {
        return this.artist + ": " + this.title + " (" + this.year + ")";
    }
}

import java.util.ArrayList;

public class Box implements ToBeStored {
    private double maxWeight;
    private ArrayList<ToBeStored> things;

    public Box(double maxWeight) {
        this.maxWeight = maxWeight;
        this.things = new ArrayList<ToBeStored>();
    }

    public void add(ToBeStored thing) {
        if (this.weight() + thing.weight() <= this.maxWeight) {
            this.things.add(thing);
        }
    }

    public double weight() {
        double weight = 0;
        for (ToBeStored thing : this.things) {
            weight += thing.weight();
        }
        return weight;
    }

    @Override
    public String toString() {
        return "Box: " + this.things.size() + " things, total weight " + this.weight() + " kg";
    }
}

public static void main(String[] args) {
    Box box = new Box(10);

    box.add(new Book("Fedor Dostojevski", "Crime and Punishment", 2));
    box.add(new Book("Robert Martin", "Clean Code", 1));
    box.add(new Book("Kent Beck", "Test Driven Development", 0.7));

    box.add(new CD("Pink Floyd", "Dark Side of the Moon", 1973));
    box.add(new CD("Wigwam", "Nuclear Nightclub", 1975));
    box.add(new CD("Rendezvous Park", "Closer to Being Here", 2012));

    System.out.println(box);
}


3.

public class GenericClass<T> {
    T value;

    public GenericClass(T value) {
        this.value = value;
    }

    public T getValue() {
        return value;
    }

    public void setValue(T value) {
        this.value = value;
    }
}

public class Main {
    public static void main(String[] args) {
        GenericClass<Integer> intObject = new GenericClass<>(10);
        GenericClass<String> stringObject = new GenericClass<>("Hello");

        System.out.println("Integer object value: " + intObject.getValue());
        System.out.println("String object value: " + stringObject.getValue());
    }
}
